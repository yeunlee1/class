IDE 통합개발 환경
=> 편집기 + 컴파일러 + 디버거가 통합되어 있어서 붙여진 이름

예) 이클립스(오픈소스)
     MS-Visual Studio Enterprise(상용)
     intelliJ Ultimate(상용) 
-----------------------------------------------------------------------------------------------------------------------
     vs code(무료) - Front End 개발자가 많이 사용. 최근 스프링부트 지원
     intelli J community(무료) - javascript 자동완성지원안됨


Front End Developer
: HTML, CSS, Javascript는 웹브라우져에서 해석되서 실행됨
=>이 세가지가 기본
    Javascript는 JQuery, React.js, vue.js등 js 라이브러리(프레임워크)를 추가로 사용

    Javascript -> JQuery -> Angular.js -> React.js -> Vue.js 순으로 발표

	React.js는 Ajax를 처리하는 함수를 제공하지 않습니다.
	=>Axios 같은 별도의 라이브러리를 사용합니다.

vanilla script
: javascript만 사용하자는 의미

React.js로 개발해서 React Native를 사용하면 App으로 변환 가능.
=> 국내에서는 Front End 개발자로 career를 계속 가져가려면 react.js 학습 권장.

Back End Developer
: PHP, ASP, ASP.NET,Servlet/JSP 등 사용
=>WAS가 해석

Full Stack
:Back End, Front End 모두 개발 가능한 개발자

사용자(User)를 기준으로 사용자가 보는 화면(브라우저)부터 서버까지 있을 때
화면부분을 Front 서버부분을 Back으로 구분
Front End는 Web Browser
Back End 는 DB Server, WAS(Web Application Server)

w3schools.com
developer.mozilla.org
www.codenary.co.kr
W3C
https://docs.emmet.io/cheat-sheet/ 
https://stackoverflow.com/ 전 세계 개발자들이 사용하는 사이트
https://zdnet.co.kr/
https://www.pexels.com/ko-kr/ 웹페이지 만들기 자료
https://pixabay.com/ 웹페이지 만들기 자료
https://www.iconfinder.com/ 이모티콘
https://fontawesome.com/ 이모티콘
https://programmers.co.kr/ 코딩테스트
https://www.acmicpc.net/ 코테 백준
https://solved.ac/
https://thebook.io/ it관련 서적사이트
https://cdnjs.com/libraries/font-awesome 폰트링크
https://color.adobe.com/ko/explore
https://apis.map.kakao.com/web/sample/
https://startbootstrap.com/themes?showPro=false
https://tympanus.net/codrops/

pjs01@hanmail.net
moozi.tistory.com

-------------------------------------------------------------------------------------------------------------------------

MEAN Stack
: MongoDB + Express + Angular.js + Node.js

MERN Stack
: MongoDB + Express + React.js + Node.js

국내 프로젝트
:React.js + Spring Boot

===================================================================================
23/11/21

HTML(Hyper Text Markup Language)

팀 버너스리 웹의 하이퍼텍스트 시스템을 고안해서 개발했다
web표준 언어
=>태그를 이용해서 마크업 방식으로 구현

Javascript
:웹의 표준 스크립트 언어
=> 자바와는 다른 언어

JScript
:MS가 만든 JavaScript 유사품

VBScript
:MS가 Visual Basic을 기반으로 만든 스크립트언어

ActionScript
:Flash 에서 사용하는 스크립트 언어

MS에서는 플래시를 지지.
IE: flash같은 플러그인 사용 지지. ActiveX등 폐해(?)발생
=>HTML5 도입도 늦음

Edge => HTML5적극 도입
Edge를 크로미움(크롬브라우저엔진)으로 다시 개발
Naver Whale도 크로미움으로 개발
=> 크롬과 비슷하게 html,css,javascript를 해석 처리

아이폰의 등장
=>사파리 브라우저는 플래시를 지원 안함.

Sun Microsystems
:자바를 만든 회사
=> 넷스케이프회사와 협력(?) 관계

W3C
:팀 버너스리가 주축으로 만든 단체
=>html, css, xml의 표준을 지정

ECMA
:javascript의 표준 지정
자바스크립트를 ECMA Script라고도 함

ECMAScript6 -> 2015년 발표
: class 도입, spread syntax, 구조분해할당, 람다식 등 새로운 syntax대거 등장

FrameWork
: 개발자가 S/W를 개발하기 위해 사용하는 S/W
=> 프레임워크는 컴포넌트의 집합. 라이브러리의 집합

일반적으로 컴포넌트는 라이브러리보다는 조금더 복잡한 개념
=>프레임워크는 라이브러리보다는 좀더 복잡한 개념

함수라이브러리
: 함수를 여러개 만든 묶음 => C언어 시절에 함수를 여러개 만든 묶음을 함수라이브러리라고 함

자바와 같은 객체지향언어에서는 함수(메서드)가 클래스 안에 존재함
=> 자바에서는 클래스API라고함

컴포넌트 => 일정기능을 구현한 작은 단위의 S/W(부품)
=> 자바같은 객체지향언어에서는 컴포넌트를 클래스로 구현

HyperText
: Web에서는 문서와 문서가 링크로 연결되어 있음.

웹퍼블리셔(Web Publisher)
: html, css 를 사용해서 화면을 작성하는 사람
상대적으로(Front End 개발자와 비교) javascript 사용빈도가 적다. JQuery를 주요 사용
-> 우리나라에서만 거의 언급되는 직군

이전에는?
웹마스터

웹개발자
:html, css, javascript + php or asp or jsp

웹디자이너
: 포토샵, 일러스트레이터 + 드림위버(위지윅 html작성기)

=> 웹디자이너가 먼저 작업후 웹개발자에게 넘겨주면 웹개발자가 수정/추가

=> 시간이 지나면서 html, css,를 손코딩 하는 트랜드로 변화됨
웹퍼블리셔 직군이 생기기 시작함

예)웹에이젼시(디자인 중심)

    웹디자이너 -> 웹퍼블리셔 -> Front End, Back End 개발자

    SI 업체( 기능 중심)

국내에서는 웹퍼블리셔보다 Front End 개발자들이 상대적으로 javascript, jquery, vue.js, react.js 등을 많이 사용해서 개발
외국에는 웹퍼블리셔 용어 거의 없음

Rust

XML(eXtensible Markup Language)
: 확장가능한 마크업 언어
-> html을 확장해서 사용 가능
태그를 개발자가 추가해서 사용
=>1. 대소문자 구분있음
2.시작태그와 끝나는 태그가 반드시 한쌍으로 작성되어야 함.
3. utf-8사용

html -> xml -> xhtml

<br>는 원래 시작태그만 존재했음
<br/>는 시작과 끝을 동시에 표현
xml,xhtml 에서는 <br>만 사용하면 에러
xhtml은 html5에 흡수됨

<br/>태그는 한줄띄울때만 사용하고 더 띄우고싶으면 css를 사용해서 띄운다.

Mordern Web 에서 잘 사용하지 않는 태그.
1.<br> => 한줄 바꿀때만 사용 => 여백을 줄 때는 css로

시맨틱(semantic)태그
: 시각적인 효과보다는 의미를 전달하는 태그
=> 사람보다는 디바이스(서치봇,  screen reader 등)에 더 중요.

사물 인터넷(internet of Things)
사람뿐만 아니라 모든 디바이스가 인터넷에 연결됨

예)<p> = 문단
   <h1> = 제목
    <nav>= 네비게이션

==================================================================================================
2023/11/22

이미지링크 <a href="">
컴퓨터에 저장된 이미지<img src="" width="" height="">

html은 웹페이지의 구조를 담당함(뼈대)
css는 꾸밈

<div> 예전에는 table코드를 썼었음

Cross Browsing
:브라우저의 종류(버전)과 상관없이 모두 같은 모양으로 출력하는 것.
=> 몇년 전에는 개발자 이슈 였으나, 최근 IE이용자가 감소하고, 크롬 , 엣지,웨일등 크로미움 기반 브라우저가 늘어나면서 점차 이슈가 줄어듬

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
모던웹에서 잘 사용하지 않은 태그
1.<br>
=>한줄 바꿀 때만 사용, 여백을 줄 때는 css로
2.<font>
=>html5에서 폐지됨.폰트 스타일은 css로
3.<table>
=>테이블 모양으로 만들 때만 사용. 레이아웃 설정할 때는 사용안함
-><ol><ul><div>를 대신 더 많이 사용
4.&nbsp;
=>한칸 공백을 줄 때만 사용. 여러칸 공백을 줄 때는 css로
=> 브라우저에서 한칸 공백은 지원하기 때문에 사용할 일이 거의 없어짐.

w3schools.com
html ->emoji

<form action="/register" method="post"> 아이디 비밀번호가 안보이게 패킹함
기본형은 method="get"

introduce <textarea name="introduce" cols="50" rows="10"></textarea> cols는 행의갯수
							        rows는 열의갯수

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>회원가입</title>
</head>
<body>
    <h1>회원가입</h1>
    <form action="/register" method="post">
        ID <input type="Text" name="id"/><br>
        PW <input type="password" name="pw"><br>
        email <input type="email" name="email"><br>
        name <input type="text" name="name"><br>
        phone <input type="text" name="phone"><br>
        job <select name="job" > 
            <option value="학생">학생</option>           
            <option value="군인">군인</option>           
            <option value="공무원">공무원</option>           
            <option value="회사원">회사원</option>           
            <option value="기타">기타</option>           
        </select><br>
            <p>
        hobby <input type="checkbox" name="hobby" value="운동">운동
         <input type="checkbox" name="hobby" value="낚시">낚시
         <input type="checkbox" name="hobby" value="게임">게임
         <input type="checkbox" name="hobby" value="영화보기">영화보기
         <input type="checkbox" name="hobby" value="만화">만화
            </p>
        <br>

        email reception <input type="radio" name="email reception" value="y" checked="checked">예
        <input type="radio" name="email reception" value="n">아니오
        <br>

        picture <input type="file" name="picture"> 사진을 업로드하세요<br>
        introduce <textarea name="introduce" cols="50" rows="10"></textarea><br>
        <input type="submit" value="회원가입 하던가 말던가">


    </form>


CSS(Cascading Style Sheet)
:웹 페이지의 스타일을 담당하는 언어
=>cascade 위에서 아래로 일괄적용됨

예)폭포수 개발방식
=> Top Down Approach 방식

CSS Selector

1. element selector 태그 선택자
태그를 선택합니다.
h1{ background-color: red;}

========================================================================================================================
2023/11/23

1. element selector 태그 선택자
태그를 선택합니다.
h1{ background-color: red;}
--  -------------------- ---------------------
|                      |                       |
ㄴ> selector       ㄴ> property        ㄴ> property value

2. class selector 클래스 선택자
: .클래스명 형식 class=클래스명 형태로 클래스 지정.
=> 여러개 중복 사용 가능.
.color1{background-color:blue;}

<div class="color1"> hello world</div>
<div class="color1"> CSS3 </div>

3. id selector 아이디 선택자
:#아이디명 형식. id=아이디명 형태로 아이디 지정.(CSS에서는 중복되도 실행되기도 하지만 쓰지말아야함 자바스크립트에서 아이디 중복이 일어나면 에러가 나기때문)
=>중복되지 않게 사용
#title{background-color:olive;}
<div id="title"> CSS3 </div>


CSS 사용 형태

1.Style 속성 사용 inline 방식
<div style="background-color:red;"> CSS3 </div>

2. <Style>태그 사용.
<style>
	h1{"background-color:red;"}
</style>

3. 외부 css파일 이용.
: 여러 페이지에 공통 style적용 가능.

css/style.css 생성
	h1{"background-color:red;"}

<link href="css/style.css" rel="stylesheet">

4. group selector 그룹선택자
: 여러개의 선택자를 동시에 적용.
h1,h2,h3{color:red;}

5.descendant selector 자손선택자
: 자손을 모두 선택.
div p{color:red;}

6. child selector 자식선택자
: 자식을 모두 선택
div>p{background:blue;}

    <div class="color1">color1</div>
    <p class="color1">color1</p>

7. attribute selector 속성선택자
:[]를 사용 속성이나 속성의 값을 이용해서 선택
a[target]{color:red;} -> a태그에 target속성이 있는 것을 선택
a[target="_blank"]{color:red;}=>a태그의 target속성값이 "_blank"인 것을 선택
a[title~="flower"]{color:red;}-> title 속성값에 "flower"라는 단어가 있는 것을 선택
a[class|="top"]{color:red;}=> class 속성값이 "top"이거나 "top-"으로 시작하는 것을 선택
a[class^="top"]{color:red;}=>class 속성값이 "top"으로 시작하는것을 선택
a[class$="top"]{color:red;}-> class 속성값이 "test"로 끝나는것 찾음
a[class*="te"]{color:red;}->class 속성값 안에 "te"가 포함되어있으면 모든것을 찾음


--------------------------------------------------------------------------------------------------------------------------------------------------------
Element 종류

1. block-level element
1) 줄이 바뀜 
2) width, height 지정 가능
예)<div>,<p>,<h1-h6>


2. inline-level element
1) 줄이 안바뀜
2) width, height 지정 불가능
예)<span><anker><strong>

css적용 우선순위
1.inline
2.<style>
3.<link href="style.css" rel="stylesheet">

코드분리
1. 초창기에는 디자인적(화면) 요소와 프로그래밍적(로직) 분리하지 않고 코딩.
2. 디자이너와 개발자의 협업을 편리하게 하기위해 코드를 분리
=> view 와 로직을 분리
3. view와 데이터와 로직을 분리
=>MVC패턴

생산성
: 정해진 시간, 비용, 인력 내에서 최대한의 성과를 내는 것.

소프트웨어 공학
TOC(total Of cost)
:S/W를 개발단계부터 운용, 유지보수, 폐기하기 까지 모든 비용

객체지향언어vs 절차식언어

객체지향언어(java,c#,c++)가 여러 사람이 협업하고 향후 유지보수하기가 
절차식 언어(c)보다 효과적입니다.

객체지향언어로 만든 App이 절차식언어로 만든 App보다 무겁습니다.

CSS Box model
https://www.w3schools.com/css/css_boxmodel.asp

Margin----------------- Margin top, Margin bottom, Margin right, Margin left
Border
Padding
Content

If the margin property has four values:

margin: 10px 5px 15px 20px;
top margin is 10px
right margin is 5px
bottom margin is 15px
left margin is 20px
If the margin property has three values:

margin: 10px 5px 15px;
top margin is 10px
right and left margins are 5px
bottom margin is 15px
If the margin property has two values:

margin: 10px 5px;
top and bottom margins are 10px
right and left margins are 5px
If the margin property has one value:

margin: 10px;
all four margins are 10px

배경화면 지정
<style>
    p{
        background-image: url("image/profile.jpg");
    }
</style>
<p style="color:white; height:30vh;">
    배경을 표시합니다
</p>

예시 코드 범위 참고)7_1_3 ~ 8_1_30

자바스크립트키: 	65647b0fbe87cead2b37c747de6caa98
깃허브주소: http://yeunlee1.github.io/portfolio/company/
















